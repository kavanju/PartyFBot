import logging
import os
from telegram import Update
from telegram.ext import (
    ApplicationBuilder, CommandHandler,
    MessageHandler, filters, ContextTypes
)
from dotenv import load_dotenv
from keep_alive import keep_alive

load_dotenv()

TOKEN = os.getenv("TOKEN")
OWNER_ID = int(os.getenv("OWNER_ID"))

logging.basicConfig(
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s", level=logging.INFO
)

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ü—Ä–∏–≤–µ—Ç! –Ø –ò–ò-–ø–æ–º–æ—â–Ω–∏–∫ –ø–æ –∑–∞–≤–µ–¥–µ–Ω–∏—è–º –¥–ª—è –æ—Ç–¥—ã—Ö–∞. –ù–∞–ø–∏—à–∏, —á—Ç–æ —Ç—ã —Ö–æ—á–µ—à—å –Ω–∞–π—Ç–∏ ‚Äî –∏ —è –ø–æ–¥—Å–∫–∞–∂—É!")

async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏, —á—Ç–æ —Ç—ã –∏—â–µ—à—å ‚Äî –Ω–∞–ø—Ä–∏–º–µ—Ä: "–•–æ—á—É –±–∞—Ä —Å –∂–∏–≤–æ–π –º—É–∑—ã–∫–æ–π –≤ –ê–ª–º–∞—Ç—ã".")

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = update.message.text
    await update.message.reply_text(f"üîç –ò—â—É –¥–ª—è —Ç–µ–±—è –ª—É—á—à–∏–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –ø–æ –∑–∞–ø—Ä–æ—Å—É: {text}... (–ó–¥–µ—Å—å –±—É–¥–µ—Ç –ò–ò-–ø–æ–¥–±–æ—Ä –∏ —Ñ–æ—Ç–æ)")

def main():
    app = ApplicationBuilder().token(TOKEN).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("help", help_command))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

    keep_alive()
    app.run_polling()

if __name__ == "__main__":
    main()
